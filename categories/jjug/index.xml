<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jjug on open build/reports/life/index.html</title>
    <link>https://grimrose.github.io/blog/categories/jjug/</link>
    <description>Recent content in Jjug on open build/reports/life/index.html</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 30 Nov 2015 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://grimrose.github.io/blog/categories/jjug/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JJUG CCC 2015 Fallに参加してきました #jjug_ccc</title>
      <link>https://grimrose.github.io/blog/2015/11/jjug-ccc-2015/</link>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0900</pubDate>
      
      <guid>https://grimrose.github.io/blog/2015/11/jjug-ccc-2015/</guid>
      <description>http://www.java-users.jp/?page_id=2056
セッション 今回は、以下のセッションを選択しました。
 keynote-1 基調講演1: 「Javaは守りに入らない、これが今のJavaだ」 keynote-2 基調講演2: Java EE 8 – Work in Progress AB-1「jOOQ と Flyway で立ち向かう、自社サービスの保守運用」(仮) EF-2 How to speed up your application using JCache[通訳あり] EF-3 Reactive Webアプリケーション – そしてSpring 5へ EF-4 ソラコムでのJava/AWS活用 – SIM管理やAWS Lambda Javaなど – AB-5 Javaエンジニアに知ってほしい PostgreSQLアンチパターン GH-6 Java8 Stream APIとApache SparkとAsakusa Frameworkの類似点・相違点 GH-7 てらだよしおの赤裸々タイム  今回のタイムテーブルを見たら、どのセッションを見たら良いのか迷ってしまうくらい素晴らしい講演者の方々でした。 選んだ幹事の人達も苦労されたと思います。
この1年、素のJavaを書くことは無くなってしまったので、選択も運用やDB等言語としてのJava以外を中心とした内容になりました。
どのセッションも面白かったですが、てらださんが楽しそうに活動をされている話を聞けたのが、一番印象的でした。
さらに懇親会や帰り道でいろいろな人とお話が出来て、その中でいろいろ解決手段などを教えていただくことが出来ました。 ありがとうございました。
 懇親会と帰宅までの間が一番実りがある話が聞けた。&amp;#10;これがあるから止められない。
&amp;mdash; とーます (@grimrose) 2015, 11月 28</description>
    </item>
    
    <item>
      <title>【東京】JJUG ナイトセミナー 「Reactive Streams特集」 に参加してきました。 #jjug</title>
      <link>https://grimrose.github.io/blog/2015/06/jjug-2015-reactive-streams/</link>
      <pubDate>Sat, 27 Jun 2015 18:19:34 +0900</pubDate>
      
      <guid>https://grimrose.github.io/blog/2015/06/jjug-2015-reactive-streams/</guid>
      <description>はじめに https://jjug.doorkeeper.jp/events/26547
@makingさんから、@okapiesさんと一緒に「Reactive Streams」について話してくれと頼まれましたので、参加してきました。
元々は、@cero_tさんが発端らしいです。
ちなみに今日のReactive Streams勉強会の発端は、ゴールデンウィーク明けに @cero_t さんがReactiveについてほげほげ言ってたことで、ナイトセミナーやろうぜって感じだったんだけど、当の本人は来ていないっていう
&amp;mdash; Toshiaki Maki (@making) 2015, 6月 24 
初めは、マイナーなネタならそんなに人集まらないだろうと思ってたのですが、キャンセル待ちが100人超えするくらいまで期待されてて正直びっくりしました。
当日のアンケートシステム、とても良かったので次回以降改善されるのを期待してます。
資料 @okapiesさんの資料は、こちらです。
 私の資料は、こちらです。
http://grimrose.github.io/jjug-2015-reactive-streams/
利用したサンプルコードは、こちらです。
https://github.com/grimrose/jjug-2015-reactive-streams
元々は、Vert.x3でやろうと思ってましたが、ReactorかRxJavaでと言われたので、使ったことがあるRxJavaを選びました。
確かに、当日のアンケートを見るとVert.x3、Ratpackの認知度が低すぎて、RxJavaを選択しておいてよかったと思いました。
ドキュメントの多さは、やはりRxJavaに分があるのですが、Reactorもかなり充実しています。
個人的には、MongoDB Reactive Streams Java Driverがチュートリアルとして、充実してると感じました。
初めてJavaでAkkaを使ってみたのですが、いろいろツライ印象しか受けませんでした。
あれなら、素直にScalaで使ったほうが分かりやすいと思います。
おわりに Reactive Streamsについては、それぞれのRuntimeの世界を繋ぐ為の仕様という認識が一番分かりやすいと思います。
実際の泥臭い部分は、Runtimeが頑張ってくれますが、何をやっているのか、どうやって実現しているのかを知っておくのは大切です。
どのRuntimeもReactive Streams向けに変換するライブラリがありますので、そのソースコードを読むのも勉強になると思います。
JDK9にどこまで採用されるか分かりませんが、データフロー制御についての共通インターフェースが採用されると、java.util.concurrentと併せて、非同期処理をもっと使いやすくなると思います。
JVMでデータフロー制御でお困りの方は、使ってみてはいかがでしょうか。
JJUGのスタッフ、参加者の皆様、@okapiesさん、ありがとうございました。</description>
    </item>
    
    <item>
      <title>JJUG CCC 2015 Springに参加してきました。 #jjug_ccc</title>
      <link>https://grimrose.github.io/blog/2015/04/jjug-ccc/</link>
      <pubDate>Wed, 15 Apr 2015 23:02:31 +0900</pubDate>
      
      <guid>https://grimrose.github.io/blog/2015/04/jjug-ccc/</guid>
      <description>http://www.java-users.jp/?page_id=1647
セッション 実は、転職して現場でJavaを書く機会がかなり減っています。
が、ツールやライブラリ等JVM上で動くプロダクトを使っているので、運用にまつわる事で勉強したいと思い参加しました。
午前は、途中から参加して、Raspberry Piのセッションから見始めました。
通訳まで用意するの大変だったと思います。内容もかなりリサーチされていてとても楽しい内容でした。
午後は、以下のセッションを選択しました。
 CD-1 Javaにおけるnull。これまでとこれから AB-2 Web開発における最新テスト手法 AB-3 大規模な負荷でもドキドキしない為のJava EE CD-4 『Embulk』に見るモダンJavaの実践的テクニック ～並列分散処理システムの実装手法～ F-6 いろんなデータをKibana4で見てみよう F-7 JobStreamerではじめるJavaBatchクラウド分散実行  特に、Embulkについては、実際に利用できるか検証してることもあり、興味深く聴いていました。
負荷テストについても、大規模とはいかないまでもそこそこのデータ量を扱っているので、どう対応したら良いか参考になりました。
Kibana4も監視周りで使ってみたいと考えているので、ひとまずGitのログの監視からしてみたいと思いました。
その他のセッションも、登壇者のバックグラウンドが様々で、面白い内容でした。
おわりに Twitterでお世話になっている人が参加されていたので、探して挨拶したり、同じように休憩してる人達と雑談してました。
個人的には「Ask the Speaker」みたいなコーナーが有ってもいいのではないかなと思いました。
初めてJJUG CCCに参加された方も多く、JJUGにも若い幹事の方が就任したりして、広がりを感じました。 Java以外の分野から入ってきた文化や価値観もそれなりに知っておかないと、Javaだけの進化で手一杯になりそうな印象があります。
JJUG CCCやナイトセミナーでは、そういった題材を扱っている良い機会だと思いますので、 まだ周りの人で参加してなくて興味がある人がいらっしゃったら、是非誘って参加してみてはいかがでしょうか。
JJUG、スポンサーの皆様、ありがとうございました。</description>
    </item>
    
  </channel>
</rss>